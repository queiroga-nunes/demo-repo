###################################################################################################################################################################
##########################################################################                   ######################################################################
##########################################################################  version_control  ######################################################################
##########################################################################                   ######################################################################
#version - edited by  -    date     ###############################################################################################################################
#v1.0   Queiroga Nunes 25/04/2021    ##############################################################################################################################
#...
###################################################################################################################################################################

###################################################################################################################################################################
"""
This code aims to
"""
###################################################################################################################################################################

###################### Variables Needed ######################
# 
##############################################################
import os


source_directory = '/home/victor/Doctorado_USal/pesquisa/datos/'
l = os.listdir(source_directory); l.sort()

for i in l:

    print(f'\033[1;37;41mSIGMA = {i[1]}.{i[2]}\033[m')
    with open(source_directory + i, 'r') as f:
        l0 = [float(line.strip()) for line in f.readlines()]
    l0 = l0[5:]
    print(len(l0))

    j = 0
    l1 = []
    first_n_bounces = first_reflection = 0
    c_step01 = c_step001 = c_step00001 = 0


    for i in range(len(l0)):

        ######################################################################
        #############################            #############################
        ############################# Reflection #############################
        #############################            #############################
        ######################################################################

        if l0[j + 2] == 0:
            l1.append([l0[j], 0, l0[j + 3]])
            if round((l0[j + 4] - l0[j]), 5) >= 0.1:
                c_step01 += 1
            elif round((l0[j + 4] - l0[j]), 5) >= 0.001:
                c_step001 += 1
            elif round((l0[j + 4] - l0[j]), 5) >= 0.00001:
                c_step00001 += 1
            j += 4
            if j >= len(l0) - 4: break


        #####################################################################
        #############################           #############################
        ############################# N-Bounces #############################
        #############################           #############################
        #####################################################################

        elif l0[j + 2] == 2:
            l1.append([l0[j], 1, l0[j + 3]])
            if first_n_bounces == 0: 
                print(f'first n-bounces window: {l0[j]}') 
                first_n_bounces += 1
            if first_reflection == 0 and l0[j + 3] == 1:
                    print(f'first reflection: {l0[j]}')
                    first_reflection += 1


            if round((l0[j + 10] - l0[j]), 5) >= 0.1:
                c_step01 += 1
            elif round((l0[j + 10] - l0[j]), 5) >= 0.001:
                c_step001 += 1
            elif round((l0[j + 10] - l0[j]), 5) >= 0.00001:
                c_step00001 += 1
            j += 10
            if j >= len(l0) - 10: break
    print(f'c_step01: {c_step01} \nc_step001: {c_step001} \nc_step00001: {c_step00001}')

# print(len(l1))
# print(l1[1])

# box_size = 10
# fr = 0
# for i in range(0, len(l1), box_size):
#     for j in range(0, box_size):
#         if l1[i + j][1] == 1:
#             fr += 1
#             break
    
# l1[1][1]
